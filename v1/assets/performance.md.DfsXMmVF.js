import{_ as s,c as e,o as n,a2 as l}from"./chunks/framework.9Uv4PgnO.js";const m=JSON.parse('{"title":"Performance & Scalability Guide","description":"","frontmatter":{},"headers":[],"relativePath":"performance.md","filePath":"performance.md","lastUpdated":1761887194000}'),r={name:"performance.md"};function i(t,a,p,o,c,d){return n(),e("div",null,[...a[0]||(a[0]=[l(`<h1 id="performance-scalability-guide" tabindex="-1">Performance &amp; Scalability Guide <a class="header-anchor" href="#performance-scalability-guide" aria-label="Permalink to &quot;Performance &amp; Scalability Guide&quot;">​</a></h1><p>This guide covers performance optimization strategies, scalability patterns, and tuning recommendations for Tenant Operator.</p><nav class="table-of-contents"><ul><li><a href="#performance-architecture">Performance Architecture</a><ul><li><a href="#three-layer-reconciliation-strategy">Three-Layer Reconciliation Strategy</a></li><li><a href="#key-optimizations">Key Optimizations</a></li></ul></li><li><a href="#scalability-benchmarks">Scalability Benchmarks</a><ul><li><a href="#tested-configurations">Tested Configurations</a></li></ul></li><li><a href="#resource-optimization">Resource Optimization</a><ul><li><a href="#_1-template-efficiency">1. Template Efficiency</a></li><li><a href="#_2-dependency-graph-optimization">2. Dependency Graph Optimization</a></li></ul></li><li><a href="#monitoring-performance">Monitoring Performance</a><ul><li><a href="#key-metrics">Key Metrics</a></li><li><a href="#performance-alerts">Performance Alerts</a></li></ul></li><li><a href="#advanced-optimization-techniques">Advanced Optimization Techniques</a><ul><li><a href="#sharding">Sharding</a></li></ul></li><li><a href="#see-also">See Also</a></li></ul></nav><h2 id="performance-architecture" tabindex="-1">Performance Architecture <a class="header-anchor" href="#performance-architecture" aria-label="Permalink to &quot;Performance Architecture&quot;">​</a></h2><h3 id="three-layer-reconciliation-strategy" tabindex="-1">Three-Layer Reconciliation Strategy <a class="header-anchor" href="#three-layer-reconciliation-strategy" aria-label="Permalink to &quot;Three-Layer Reconciliation Strategy&quot;">​</a></h3><p>Tenant Operator uses a sophisticated multi-layer approach for optimal performance:</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─────────────────────────────────────────────────┐</span></span>
<span class="line"><span>│ Layer 1: Event-Driven (Immediate)              │</span></span>
<span class="line"><span>│ - Watch predicates filter changes              │</span></span>
<span class="line"><span>│ - Only Generation/Annotation changes trigger   │</span></span>
<span class="line"><span>│ - Namespace changes via labels                 │</span></span>
<span class="line"><span>└─────────────────────────────────────────────────┘</span></span>
<span class="line"><span>                      ↓</span></span>
<span class="line"><span>┌─────────────────────────────────────────────────┐</span></span>
<span class="line"><span>│ Layer 2: Periodic Reconciliation (30 seconds)  │</span></span>
<span class="line"><span>│ - Fast status reflection                       │</span></span>
<span class="line"><span>│ - Child resource status changes                │</span></span>
<span class="line"><span>│ - Drift detection                              │</span></span>
<span class="line"><span>└─────────────────────────────────────────────────┘</span></span>
<span class="line"><span>                      ↓</span></span>
<span class="line"><span>┌─────────────────────────────────────────────────┐</span></span>
<span class="line"><span>│ Layer 3: Database Sync (Configurable, 1 min)   │</span></span>
<span class="line"><span>│ - Registry syncs with datasource               │</span></span>
<span class="line"><span>│ - Create/Update/Delete Tenant CRs              │</span></span>
<span class="line"><span>└─────────────────────────────────────────────────┘</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="key-optimizations" tabindex="-1">Key Optimizations <a class="header-anchor" href="#key-optimizations" aria-label="Permalink to &quot;Key Optimizations&quot;">​</a></h3><h4 id="_1-smart-watch-predicates-✅" tabindex="-1">1. Smart Watch Predicates ✅ <a class="header-anchor" href="#_1-smart-watch-predicates-✅" aria-label="Permalink to &quot;1. Smart Watch Predicates ✅&quot;">​</a></h4><p>Filters unnecessary reconciliations by watching only meaningful changes:</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Only reconcile on:</span></span>
<span class="line"><span style="color:#6A737D;">// - Generation changes (spec updates)</span></span>
<span class="line"><span style="color:#6A737D;">// - Annotation changes</span></span>
<span class="line"><span style="color:#6A737D;">// - Excludes status-only updates</span></span>
<span class="line"><span style="color:#E1E4E8;">ownedResourcePredicate </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> predicate.</span><span style="color:#B392F0;">Or</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#B392F0;">    predicate</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">GenerationChangedPredicate</span><span style="color:#E1E4E8;">{},</span></span>
<span class="line"><span style="color:#B392F0;">    predicate</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">AnnotationChangedPredicate</span><span style="color:#E1E4E8;">{},</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>Impact:</strong></p><ul><li>70-80% reduction in reconciliation overhead</li><li>Eliminates status update loops</li><li>CPU usage reduced by ~50%</li></ul><h4 id="_2-fast-requeue-interval-✅" tabindex="-1">2. Fast Requeue Interval ✅ <a class="header-anchor" href="#_2-fast-requeue-interval-✅" aria-label="Permalink to &quot;2. Fast Requeue Interval ✅&quot;">​</a></h4><p>Changed from 5 minutes to 30 seconds:</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># Before: 5 minute requeue</span></span>
<span class="line"><span style="color:#85E89D;">return ctrl.Result{RequeueAfter</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5 * time.Minute}, nil</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># After: 30 second requeue</span></span>
<span class="line"><span style="color:#85E89D;">return ctrl.Result{RequeueAfter</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">30 * time.Second}, nil</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>Impact:</strong></p><ul><li>Child resource status reflected within 30s</li><li>10x faster status updates</li><li>Maintains balance with cluster load</li></ul><h4 id="_3-namespace-tracking-✅" tabindex="-1">3. Namespace Tracking ✅ <a class="header-anchor" href="#_3-namespace-tracking-✅" aria-label="Permalink to &quot;3. Namespace Tracking ✅&quot;">​</a></h4><p>Label-based tracking for Namespaces (no ownerReferences needed):</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Automatic labels added to Namespaces</span></span>
<span class="line"><span style="color:#E1E4E8;">labels[</span><span style="color:#9ECBFF;">&quot;kubernetes-tenants.org/tenant&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tenant.Name</span></span>
<span class="line"><span style="color:#E1E4E8;">labels[</span><span style="color:#9ECBFF;">&quot;kubernetes-tenants.org/tenant-namespace&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tenant.Namespace</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>Impact:</strong></p><ul><li>Immediate namespace change detection</li><li>No polling required</li><li>Efficient label-based queries</li></ul><h4 id="_4-server-side-apply-ssa" tabindex="-1">4. Server-Side Apply (SSA) <a class="header-anchor" href="#_4-server-side-apply-ssa" aria-label="Permalink to &quot;4. Server-Side Apply (SSA)&quot;">​</a></h4><p>Default patch strategy uses Kubernetes SSA:</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#85E89D;">patchStrategy</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">apply</span><span style="color:#6A737D;">  # Default</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Benefits:</strong></p><ul><li>Conflict-free updates</li><li>Field-level ownership</li><li>Efficient diffs</li><li>Preserves other controllers&#39; changes</li></ul><h2 id="scalability-benchmarks" tabindex="-1">Scalability Benchmarks <a class="header-anchor" href="#scalability-benchmarks" aria-label="Permalink to &quot;Scalability Benchmarks&quot;">​</a></h2><h3 id="tested-configurations" tabindex="-1">Tested Configurations <a class="header-anchor" href="#tested-configurations" aria-label="Permalink to &quot;Tested Configurations&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Tenants</th><th>Templates</th><th>Resources/Tenant</th><th>Total Resources</th><th>Reconciliation Time</th><th>Memory Usage</th></tr></thead><tbody><tr><td>TODO</td><td>TODO</td><td>TODO</td><td>TODO</td><td>TODO</td><td>TODO</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">Data needed</p><p>Benchmark figures are placeholders—capture real metrics from staging clusters before relying on these numbers.</p></div><h2 id="resource-optimization" tabindex="-1">Resource Optimization <a class="header-anchor" href="#resource-optimization" aria-label="Permalink to &quot;Resource Optimization&quot;">​</a></h2><h3 id="_1-template-efficiency" tabindex="-1">1. Template Efficiency <a class="header-anchor" href="#_1-template-efficiency" aria-label="Permalink to &quot;1. Template Efficiency&quot;">​</a></h3><p><strong>Good - Efficient template:</strong></p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#85E89D;">nameTemplate</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;{{ .uid }}-app&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Bad - Complex template:</strong></p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#85E89D;">nameTemplate</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;{{ .uid }}-{{ .region }}-{{ .planId }}-{{ .timestamp }}&quot;</span></span>
<span class="line"><span style="color:#6A737D;"># Avoid: timestamp, random values, complex logic</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>Tips:</strong></p><ul><li>Keep templates simple</li><li>Avoid random/timestamp values (breaks caching)</li><li>Use consistent naming patterns</li></ul><h3 id="_2-dependency-graph-optimization" tabindex="-1">2. Dependency Graph Optimization <a class="header-anchor" href="#_2-dependency-graph-optimization" aria-label="Permalink to &quot;2. Dependency Graph Optimization&quot;">​</a></h3><p><strong>Good - Shallow dependency tree:</strong></p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ns</span><span style="color:#6A737D;">          # No dependencies</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">app</span><span style="color:#6A737D;">         # Depends on: ns</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">svc</span><span style="color:#6A737D;">         # Depends on: app</span></span>
<span class="line"><span style="color:#6A737D;"># Depth: 3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>Bad - Deep dependency tree:</strong></p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">a</span><span style="color:#6A737D;">           # Depends on: none</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">b</span><span style="color:#6A737D;">           # Depends on: a</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">c</span><span style="color:#6A737D;">           # Depends on: b</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">d</span><span style="color:#6A737D;">           # Depends on: c</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">e</span><span style="color:#6A737D;">           # Depends on: d</span></span>
<span class="line"><span style="color:#6A737D;"># Depth: 5 (slow)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>Impact:</strong></p><ul><li>Shallow trees = Parallel execution</li><li>Deep trees = Sequential execution</li></ul><h2 id="monitoring-performance" tabindex="-1">Monitoring Performance <a class="header-anchor" href="#monitoring-performance" aria-label="Permalink to &quot;Monitoring Performance&quot;">​</a></h2><h3 id="key-metrics" tabindex="-1">Key Metrics <a class="header-anchor" href="#key-metrics" aria-label="Permalink to &quot;Key Metrics&quot;">​</a></h3><details class="details custom-block"><summary>Work in progress</summary><p>Document recommended alert thresholds and dashboards after validating metrics in production.</p></details><h3 id="performance-alerts" tabindex="-1">Performance Alerts <a class="header-anchor" href="#performance-alerts" aria-label="Permalink to &quot;Performance Alerts&quot;">​</a></h3><details class="details custom-block"><summary>Work in progress</summary><p>Define actionable alert thresholds (latency, failure rates) once production benchmarks are finalized.</p></details><h2 id="advanced-optimization-techniques" tabindex="-1">Advanced Optimization Techniques <a class="header-anchor" href="#advanced-optimization-techniques" aria-label="Permalink to &quot;Advanced Optimization Techniques&quot;">​</a></h2><h3 id="sharding" tabindex="-1">Sharding <a class="header-anchor" href="#sharding" aria-label="Permalink to &quot;Sharding&quot;">​</a></h3><details class="details custom-block"><summary>Planned feature</summary><p>Sharding support is under design for v1.2 to scale across multiple controller replicas.</p></details><p><strong>Note:</strong> Not yet implemented, planned for v1.2</p><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See Also&quot;">​</a></h2><ul><li><a href="./monitoring.html">Monitoring Guide</a> - Metrics and alerting</li><li><a href="./configuration.html">Configuration Guide</a> - Operator configuration</li><li><a href="./troubleshooting.html">Troubleshooting Guide</a> - Common issues</li></ul>`,58)])])}const b=s(r,[["render",i]]);export{m as __pageData,b as default};
